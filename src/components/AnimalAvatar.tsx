import React from 'react';
import { View, Text, StyleSheet } from 'react-native';
import Svg, { Circle, Path } from 'react-native-svg';
import { AnimalType, ColorType, AVATAR_COLORS, getInitials } from '@/utils/avatarUtils';

interface AnimalAvatarProps {
  animal?: AnimalType;
  color?: ColorType;
  size?: number;
  showInitials?: boolean;
  initials?: string;
  name?: string;
}

// SVG paths and positioning for each animal (extracted from Figma)
interface AnimalData {
  paths: string[];
  x: number;
  y: number;
  width: number;
  height: number;
}

const ANIMAL_DATA: Record<AnimalType, AnimalData> = {
  Kitty: {
    paths: [
      "M6.52198 11.1992C5.95453 11.1992 5.49414 11.6596 5.49414 12.2271C5.49414 12.7945 5.95453 13.2549 6.52198 13.2549C7.08943 13.2549 7.54981 12.7945 7.54981 12.2271C7.54981 11.6596 7.08943 11.1992 6.52198 11.1992Z",
      "M13.4692 11.1992C12.9018 11.1992 12.4414 11.6596 12.4414 12.2271C12.4414 12.7945 12.9018 13.2549 13.4692 13.2549C14.0367 13.2549 14.4971 12.7945 14.4971 12.2271C14.4971 11.6596 14.0367 11.1992 13.4692 11.1992Z",
      "M9.90603 14.7324C9.27434 14.7324 8.74972 15.0322 8.83537 15.3106C8.92102 15.589 9.52059 16.0493 9.90603 16.0493C10.2915 16.0493 10.9018 15.589 10.9767 15.3106C11.0624 15.0322 10.5377 14.7324 9.90603 14.7324Z",
      "M9.9893 0.0107066C4.46467 0.0107066 0 4.48608 0 10.0107C0 13.0407 1.35975 15.7495 3.49037 17.591V7.0985C3.49037 5.47109 4.10064 5.47109 4.70021 6.19914C5.29979 6.92719 6.4454 7.95503 6.4454 7.95503C6.4454 7.95503 7.59101 7.39829 10 7.39829C12.409 7.39829 13.5546 7.95503 13.5546 7.95503C13.5546 7.95503 14.7002 6.91649 15.2998 6.19914C15.8994 5.4818 16.5096 5.4818 16.5096 7.0985V17.5803C18.6403 15.7495 20 13.0407 20 10C20 4.47537 15.5246 0 10 0L9.9893 0.0107066Z"
    ],
    x: 2,
    y: 2,
    width: 20,
    height: 17.59
  },
  Meerkat: {
    paths: [
      "M6.6 9.3C6.0 9.3 5.6 9.8 5.6 10.3C5.6 10.9 6.0 11.3 6.6 11.3C7.2 11.3 7.6 10.9 7.6 10.3C7.6 9.8 7.2 9.3 6.6 9.3Z",
      "M13.3 9.3C12.7 9.3 12.3 9.8 12.3 10.3C12.3 10.9 12.7 11.3 13.3 11.3C13.9 11.3 14.3 10.9 14.3 10.3C14.3 9.8 13.9 9.3 13.3 9.3Z",
      "M10.0 12.8C9.4 12.8 8.8 13.1 8.9 13.4C9.0 13.7 9.6 14.1 10.0 14.1C10.4 14.1 11.0 13.7 11.1 13.4C11.2 13.1 10.6 12.8 10.0 12.8Z",
      "M10.0 0C4.5 0 0 4.5 0 10.0C0 13.5 1.8 16.6 4.5 18.4C6.4 16.0 5.0 14.8 3.9 13.3C3.8 13.2 3.7 13.1 3.7 13.0C2.5 11.2 3.5 9.6 3.5 9.6C2.5 6.6 4.7 6.8 5.6 7.3C5.6 7.3 7.2 6.2 10.0 6.2C12.8 6.2 14.4 7.3 14.4 7.3C15.3 6.8 17.5 6.6 16.5 9.6C16.5 9.6 17.5 11.2 16.3 13.0C16.3 13.1 16.2 13.2 16.1 13.3C15.0 14.8 13.6 16.0 15.5 18.4C18.2 16.6 20.0 13.5 20.0 10.0C20.0 4.5 15.5 0 10.0 0Z"
    ],
    x: 2,
    y: 2,
    width: 20,
    height: 18.4
  },
  Mouse: {
    paths: [
      "M6.7 9.4C6.2 9.4 5.8 9.8 5.8 10.3C5.8 10.8 6.2 11.2 6.7 11.2C7.2 11.2 7.7 10.8 7.7 10.3C7.7 9.8 7.2 9.4 6.7 9.4Z",
      "M14.2 10.3C14.2 9.8 13.7 9.4 13.2 9.4C12.7 9.4 12.3 9.8 12.3 10.3C12.3 10.8 12.7 11.3 13.2 11.3C13.7 11.3 14.2 10.8 14.2 10.3Z",
      "M9.9 12.6C9.3 12.6 8.8 12.9 8.9 13.2C9.0 13.4 9.5 13.9 9.9 13.9C10.3 13.9 10.8 13.4 10.9 13.2C11.0 12.9 10.5 12.6 9.9 12.6Z",
      "M10.0 0C4.5 0 0 4.5 0 10.0C0 14.0 2.3 17.4 5.7 19.0C6.0 18.7 6.3 18.3 6.5 17.9C8.3 15.1 6.6 15.4 5.1 14.2C3.6 13.0 4.3 10.9 4.3 10.9C1.1 10.1 1.6 7.1 3.1 6.3C4.6 5.4 6.2 6.9 6.2 6.9C6.2 6.9 7.7 5.6 10.0 5.6C12.2 5.6 13.8 6.9 13.8 6.9C13.8 6.9 15.4 5.4 16.8 6.3C18.3 7.1 18.8 10.1 15.7 10.9C15.7 10.9 16.3 13.0 14.8 14.2C13.3 15.4 11.6 15.1 13.4 17.9C13.7 18.3 14.0 18.7 14.2 19.0C17.6 17.4 20.0 14.0 20.0 10.0C20.0 4.5 15.5 0 10.0 0Z"
    ],
    x: 2,
    y: 2,
    width: 20,
    height: 19
  },
  Cow: {
    paths: [
      "M7.9769 9.50017C7.9769 9.03278 7.59647 8.65234 7.12908 8.65234C6.66168 8.65234 6.28125 9.03278 6.28125 9.50017C6.28125 9.96756 6.66168 10.348 7.12908 10.348C7.59647 10.348 7.9769 9.96756 7.9769 9.50017Z",
      "M13.7269 9.50017C13.7269 9.03278 13.3465 8.65234 12.8791 8.65234C12.4117 8.65234 12.0312 9.03278 12.0312 9.50017C12.0312 9.96756 12.4117 10.348 12.8791 10.348C13.3465 10.348 13.7269 9.96756 13.7269 9.50017Z",
      "M10 0C4.47826 0 0 4.47826 0 10C0 13.0652 1.38042 15.8044 3.55434 17.6413C4.71738 16.7283 6.42391 16.1304 6.80434 15.4022C7.33695 14.3804 6.27173 14.5 5.36955 12.9239C4.46738 11.337 5.41304 9.36957 5.41304 9.36957C4.41304 11.3696 2.46739 11.1739 2.54348 9.76087C2.61956 8.34783 5.0326 6.73913 5.0326 6.73913C5.0326 6.73913 3.98913 4.30435 4.59782 4.20652C5.20652 4.1087 6.52174 5.47826 6.52174 5.47826C7.22826 5.08696 8.70652 4.76087 10 4.76087C11.2935 4.76087 12.7717 5.08696 13.4783 5.47826C13.4783 5.47826 14.7935 4.11957 15.4022 4.20652C16.0109 4.30435 14.9674 6.73913 14.9674 6.73913C14.9674 6.73913 17.3804 8.34783 17.4565 9.76087C17.5326 11.1739 15.5761 11.3696 14.5761 9.36957C14.5761 9.36957 15.5217 11.3478 14.6304 12.9239C13.7283 14.5109 12.6522 14.3804 13.1957 15.4022C13.5761 16.1413 15.2826 16.7391 16.4456 17.6413C18.6196 15.8044 20 13.0652 20 10C20 4.47826 15.5217 0 10 0Z",
      "M9.99865 11.0654C8.62908 11.0654 7.53125 11.848 7.53125 12.8154C7.53125 13.7828 8.63995 14.5654 9.99865 14.5654C11.3573 14.5654 12.4769 13.7828 12.4769 12.8154C12.4769 11.848 11.3682 11.0654 9.99865 11.0654ZM8.82473 13.1198C8.60734 13.1198 8.42256 12.9459 8.42256 12.7176C8.42256 12.4893 8.60734 12.3154 8.82473 12.3154C9.04212 12.3154 9.2269 12.4893 9.2269 12.7176C9.2269 12.9459 9.04212 13.1198 8.82473 13.1198ZM11.2378 13.1198C11.0204 13.1198 10.8356 12.9459 10.8356 12.7176C10.8356 12.4893 11.0204 12.3154 11.2378 12.3154C11.4552 12.3154 11.6399 12.4893 11.6399 12.7176C11.6399 12.9459 11.4552 13.1198 11.2378 13.1198Z"
    ],
    x: 2,
    y: 2,
    width: 20,
    height: 17.64
  },
  Elephant: {
    paths: [
      "M6.4 11.1C6.4 11.5 6.8 11.9 7.2 11.9C7.7 11.9 8.1 11.5 8.1 11.1C8.1 10.6 7.7 10.3 7.2 10.3C6.8 10.3 6.4 10.6 6.4 11.1Z",
      "M12.7 11.9C13.2 11.9 13.6 11.5 13.6 11.1C13.6 10.6 13.2 10.3 12.7 10.3C12.3 10.3 11.9 10.6 11.9 11.1C11.9 11.5 12.3 11.9 12.7 11.9Z",
      "M10.0 0C4.5 0 0 4.5 0 10.0C0 15.1 3.9 19.3 8.9 19.9C8.9 19.0 8.9 17.7 8.0 16.7C6.9 15.5 6.6 14.9 6.6 14.9C6.6 14.9 3.9 16.0 2.6 12.6C1.3 9.1 3.1 6.2 4.2 5.4C5.4 4.7 6.9 6.2 6.9 6.2C7.3 5.9 8.6 5.4 10.0 5.4C11.4 5.4 12.7 5.9 13.1 6.2C13.1 6.2 14.6 4.7 15.7 5.4C16.9 6.2 18.7 9.1 17.4 12.6C16.1 16.0 13.4 14.9 13.4 14.9C13.4 14.9 13.1 15.5 12.0 16.7C11.1 17.7 11.1 19.0 11.1 19.9C16.1 19.3 20.0 15.1 20.0 10.0C20.0 4.5 15.5 0 10.0 0Z"
    ],
    x: 2,
    y: 2,
    width: 20,
    height: 19.9
  },
  Bear: {
    paths: [
      "M6.97 10.46C6.46 10.46 6.05 10.87 6.05 11.38C6.05 11.90 6.46 12.31 6.97 12.31C7.49 12.31 7.90 11.90 7.90 11.38C7.90 10.87 7.49 10.46 6.97 10.46Z",
      "M13.03 10.46C12.51 10.46 12.10 10.87 12.10 11.38C12.10 11.90 12.51 12.31 13.03 12.31C13.54 12.31 13.95 11.90 13.95 11.38C13.95 10.87 13.54 10.46 13.03 10.46Z",
      "M9.95 13.54C9.33 13.54 8.92 13.85 9.03 14.05C9.13 14.26 9.64 14.77 9.95 14.77C10.26 14.77 10.77 14.26 10.87 14.05C10.97 13.85 10.56 13.54 9.95 13.54Z",
      "M9.95 0C4.51 0 0 4.51 0 10.05C0 13.03 1.33 15.69 3.38 17.54C3.90 16.62 4.72 16.00 4.72 16.00C2.56 13.85 3.59 11.08 3.59 11.08C2.67 10.26 2.26 8.51 3.08 7.79C3.79 7.18 5.23 7.79 5.23 7.79C6.05 6.97 7.28 6.26 9.95 6.26C12.72 6.26 13.95 6.97 14.77 7.79C14.77 7.79 16.21 7.18 16.92 7.79C17.74 8.51 17.44 10.26 16.41 11.08C16.41 11.08 17.44 13.85 15.28 16.00C15.28 16.00 16.10 16.62 16.62 17.54C18.67 15.69 20.00 13.03 20.00 10.05C20.00 4.51 15.49 0 9.95 0Z"
    ],
    x: 2,
    y: 2,
    width: 20,
    height: 17.54
  },
  Hamster: {
    paths: [
      "M6.60 9.32C6.02 9.32 5.55 9.74 5.55 10.37C5.55 10.89 6.02 11.31 6.60 11.31C7.18 11.31 7.64 10.89 7.64 10.37C7.64 9.74 7.18 9.32 6.60 9.32Z",
      "M13.51 9.32C12.93 9.32 12.46 9.74 12.46 10.37C12.46 10.89 12.93 11.31 13.51 11.31C14.08 11.31 14.55 10.89 14.55 10.37C14.55 9.74 14.08 9.32 13.51 9.32Z",
      "M9.95 12.77C9.32 12.77 8.80 13.09 8.90 13.40C9.01 13.72 9.63 14.14 9.95 14.14C10.27 14.14 10.89 13.72 10.99 13.40C11.10 13.09 10.58 12.77 9.95 12.77Z",
      "M9.95 0C4.50 0 0 4.50 0 9.95C0 11.83 0.52 13.51 1.36 14.97C1.99 12.57 3.14 10.26 3.46 9.74C3.46 9.63 3.46 9.63 3.46 9.63C2.93 8.90 2.72 6.49 3.46 6.49C4.29 6.49 5.55 7.33 5.55 7.33C5.55 7.33 7.23 6.28 9.95 6.28C12.77 6.28 14.45 7.33 14.45 7.33C14.45 7.33 15.71 6.49 16.54 6.49C17.28 6.49 17.07 8.90 16.54 9.63C16.54 9.63 16.54 9.63 16.54 9.74C16.86 10.26 18.01 12.57 18.64 14.97C19.48 13.51 20.00 11.83 20.00 9.95C20.00 4.50 15.50 0 9.95 0Z"
    ],
    x: 2,
    y: 2,
    width: 20,
    height: 14.97
  },
  Llama: {
    paths: [
      "M7.04042 10.6094C6.56376 10.6094 6.17578 10.9974 6.17578 11.474C6.17578 11.9507 6.56376 12.3387 7.04042 12.3387C7.51709 12.3387 7.90507 11.9507 7.90507 11.474C7.90507 10.9974 7.51709 10.6094 7.04042 10.6094Z",
      "M13.7898 11.474C13.7898 10.9974 13.4019 10.6094 12.9252 10.6094C12.4485 10.6094 12.0605 10.9974 12.0605 11.474C12.0605 11.9507 12.4485 12.3387 12.9252 12.3387C13.4019 12.3387 13.7898 11.9507 13.7898 11.474Z",
      "M9.90781 13.5908C9.37572 13.5908 8.9323 13.8458 8.99882 14.0786C9.06533 14.3114 9.57525 14.7104 9.90781 14.7104C10.2404 14.7104 10.7503 14.3224 10.8168 14.0786C10.8833 13.8458 10.4399 13.5908 9.90781 13.5908Z",
      "M9.97666 0C4.46733 0 0 4.46732 0 9.98774C0 13.9673 2.33898 17.4037 5.71996 19C6.49592 18.3238 6.76195 17.5368 6.67327 16.6167C6.5735 15.5414 4.67795 16.007 4.00175 14.2112C3.3699 12.238 4.43407 10.3203 4.43407 10.3203C4.43407 10.3203 3.96849 9.71062 3.70245 8.85706C3.4364 8.0035 3.23687 6.76196 3.70245 6.08576C4.16802 5.40957 6.0636 7.97024 6.0636 7.97024C6.0636 7.97024 7.37165 6.76196 9.91015 6.76196H10.0432C12.5817 6.76196 13.8897 7.97024 13.8897 7.97024C13.8897 7.97024 15.7853 5.40957 16.2509 6.08576C16.7165 6.76196 16.5169 8.0035 16.2509 8.85706C15.9848 9.71062 15.5193 10.3203 15.5193 10.3203C15.5193 10.3203 16.5945 12.238 15.9627 14.2112C15.2865 16.007 13.3909 15.5525 13.2911 16.6167C13.2024 17.5368 13.4685 18.3238 14.2444 19C17.6254 17.4037 19.9644 13.9673 19.9644 9.98774C19.9644 4.47841 15.4971 0 9.98774 0H9.97666Z"
    ],
    x: 2,
    y: 2,
    width: 20,
    height: 19
  },
  Weasel: {
    paths: [
      "M6.49518 10.5664C5.90694 10.5664 5.42969 11.0437 5.42969 11.6319C5.42969 12.2201 5.90694 12.6974 6.49518 12.6974C7.08341 12.6974 7.56065 12.2201 7.56065 11.6319C7.56065 11.0437 7.08341 10.5664 6.49518 10.5664Z",
      "M13.6983 12.6857C14.2865 12.6857 14.7638 12.2084 14.7638 11.6202C14.7638 11.0319 14.2865 10.5547 13.6983 10.5547C13.1101 10.5547 12.6328 11.0319 12.6328 11.6202C12.6328 12.2084 13.1101 12.6857 13.6983 12.6857Z",
      "M10.0042 14.2295C9.34935 14.2295 8.80551 14.5403 8.8943 14.8288C8.97199 15.1174 9.60462 15.5946 10.0042 15.5946C10.4037 15.5946 11.0364 15.1174 11.1141 14.8288C11.2028 14.5403 10.659 14.2295 10.0042 14.2295Z",
      "M10 0C4.48392 0 0 4.47281 0 10C0 10.1554 0.0111035 10.3219 0.0222023 10.4772C0.22198 14.6837 3.01887 18.202 6.84794 19.4784C7.51387 18.6015 7.98002 16.5594 5.4273 15.6049C3.06326 14.717 2.53052 11.9312 2.59711 11.4317C2.59711 11.4095 2.61931 11.3762 2.6304 11.354C3.79578 10.0555 4.00666 9.01221 4.00666 9.01221C4.00666 9.01221 3.12986 5.78246 4.00666 5.24972C4.88346 4.71698 7.42508 6.61487 7.42508 6.61487C7.71365 6.40399 9.06771 6.08213 10 6.08213C10.9323 6.08213 12.2974 6.40399 12.5749 6.61487C12.5749 6.61487 15.1165 4.71698 15.9933 5.24972C16.8701 5.78246 15.9933 9.01221 15.9933 9.01221C15.9933 9.01221 16.2042 10.0666 17.3696 11.354C17.3696 11.3762 17.3918 11.4095 17.4029 11.4317C17.4695 11.9312 16.9478 14.7059 14.5727 15.6049C12.02 16.5705 12.4861 18.6015 13.1521 19.4784C16.9811 18.202 19.778 14.6837 19.9778 10.4772C19.9778 10.3219 20 10.1554 20 10C20 4.48391 15.5272 0 10.0111 0H10Z"
    ],
    x: 2,
    y: 2,
    width: 20,
    height: 20
  },
  Bunny: {
    paths: [
      "M7.18 12.21C6.77 12.21 6.46 12.51 6.46 13.03C6.46 13.44 6.77 13.85 7.18 13.85C7.69 13.85 8.00 13.44 8.00 13.03C8.00 12.51 7.69 12.21 7.18 12.21Z",
      "M13.44 13.03C13.44 12.51 13.13 12.21 12.72 12.21C12.21 12.21 11.90 12.51 11.90 13.03C11.90 13.44 12.21 13.85 12.72 13.85C13.13 13.85 13.44 13.44 13.44 13.03Z",
      "M9.85 14.97C9.33 14.97 9.03 15.18 9.03 15.38C9.13 15.59 9.54 16.00 9.85 16.00C10.16 16.00 10.67 15.59 10.77 15.38C10.87 15.18 10.56 14.97 9.85 14.97Z",
      "M9.95 0C4.41 0 0 4.41 0 9.95C0 14.46 2.97 18.36 7.18 19.49C8.51 17.23 7.08 17.23 5.95 16.62C4.72 16.00 3.28 15.18 3.79 11.90C4.00 10.36 4.82 9.03 5.85 8.00C4.51 4.82 5.23 2.87 6.36 2.87C7.28 2.97 8.00 5.33 8.21 6.46C8.82 6.26 9.44 6.15 9.95 6.15C10.56 6.15 11.18 6.26 11.69 6.46C12.00 5.33 12.72 2.97 13.54 2.87C14.67 2.87 15.38 4.82 14.15 8.00C15.18 9.03 16.00 10.36 16.21 11.90C16.62 15.18 15.28 16.00 14.05 16.62C12.82 17.23 11.49 17.23 12.82 19.49C17.03 18.36 20.00 14.46 20.00 9.95C20.00 4.41 15.59 0 9.95 0Z"
    ],
    x: 2,
    y: 2,
    width: 20,
    height: 19.49
  },
  Koala: {
    paths: [
      "M7.45 8.37C7.04 8.37 6.73 8.78 6.73 9.18C6.73 9.59 7.04 9.90 7.45 9.90C7.86 9.90 8.16 9.59 8.16 9.18C8.16 8.78 7.86 8.37 7.45 8.37Z",
      "M13.27 9.18C13.27 8.78 12.96 8.37 12.55 8.37C12.14 8.37 11.84 8.78 11.84 9.18C11.84 9.59 12.14 9.90 12.55 9.90C12.96 9.90 13.27 9.59 13.27 9.18Z",
      "M9.90 10.00C9.18 10.00 8.67 10.71 8.57 11.53C8.47 12.45 8.47 13.06 8.88 13.37C9.29 13.67 9.80 13.47 9.80 13.16C9.80 12.86 9.29 12.76 9.18 12.55C9.08 12.35 9.29 12.14 9.39 12.14H10.20C10.31 12.14 10.51 12.24 10.41 12.55C10.31 12.76 9.80 12.86 9.80 13.16C9.80 13.47 10.31 13.67 10.71 13.37C11.12 13.06 11.12 12.45 11.02 11.53C10.92 10.71 10.41 10.00 9.90 10.00Z",
      "M10.00 0C4.49 0 0 4.49 0 10.00C0 12.96 1.33 15.61 3.37 17.45C4.39 15.61 5.82 14.59 7.14 13.88C6.84 13.67 6.43 13.47 5.82 13.27C3.88 12.35 4.49 10.41 4.80 9.18C5.10 7.96 2.45 9.29 2.04 7.25C1.73 5.10 3.47 4.08 4.90 4.18C6.22 4.29 7.04 6.12 7.04 6.12C7.65 5.61 9.08 5.31 10.00 5.31C10.92 5.31 12.35 5.61 13.06 6.12C13.06 6.12 13.88 4.29 15.20 4.18C16.53 4.08 18.27 5.10 17.96 7.25C17.65 9.29 15.00 7.96 15.31 9.18C15.61 10.41 16.22 12.35 14.29 13.27C13.67 13.47 13.27 13.67 12.96 13.88C14.29 14.59 15.71 15.61 16.63 17.45C18.67 15.61 20.00 12.96 20.00 10.00C20.00 4.49 15.51 0 10.00 0Z"
    ],
    x: 2,
    y: 2,
    width: 20,
    height: 17.45
  },
  Doggy: {
    paths: [
      "M7.54589 9.69017C7.12413 9.69017 6.76896 10.0342 6.76896 10.4671C6.76896 10.8999 7.11303 11.244 7.54589 11.244C7.97874 11.244 8.3228 10.8999 8.3228 10.4671C8.3228 10.0342 7.97874 9.69017 7.54589 9.69017Z",
      "M13.5731 10.4543C13.5731 10.0214 13.229 9.67739 12.7962 9.67739C12.3633 9.67739 12.0193 10.0214 12.0193 10.4543C12.0193 10.8872 12.3633 11.2312 12.7962 11.2312C13.229 11.2312 13.5731 10.8872 13.5731 10.4543Z",
      "M10.1103 12.3527C9.63305 12.3527 9.2335 12.5858 9.30009 12.7967C9.36669 13.0075 9.82173 13.3627 10.1103 13.3627C10.3989 13.3627 10.865 13.0186 10.9205 12.7967C10.9871 12.5858 10.5875 12.3527 10.1103 12.3527Z",
      "M9.99999 0C4.4839 0 0 4.4728 0 9.99999C0 13.1298 1.43173 15.9156 3.68478 17.7469C5.03884 16.5039 7.31409 15.3607 6.51498 14.8058C5.52719 14.1065 5.60489 13.4517 5.60489 13.4517C5.60489 13.4517 3.99555 14.4062 3.00776 13.2297C2.01997 12.0644 3.00777 9.50055 3.85128 8.19089C4.69478 6.88124 5.58268 7.2031 5.58268 7.2031C5.58268 7.2031 7.33628 5.73807 9.99999 5.73807C12.6637 5.73807 14.4173 7.2031 14.4173 7.2031C14.4173 7.2031 15.3052 6.87014 16.1487 8.19089C16.9922 9.50055 17.9689 12.0644 16.9922 13.2297C16.0044 14.3951 14.3951 13.4517 14.3951 13.4517C14.3951 13.4517 14.4728 14.1065 13.485 14.8058C12.6859 15.3718 14.95 16.5039 16.3152 17.7469C18.5572 15.9156 20 13.1298 20 9.99999C20 4.4839 15.5272 0 10.0111 0H9.99999Z"
    ],
    x: 2,
    y: 2,
    width: 20,
    height: 18
  }
};

export const AnimalAvatar: React.FC<AnimalAvatarProps> = ({
  animal,
  color,
  size = 40,
  showInitials = true,
  initials,
  name
}) => {
  const displayInitials = initials || (name ? getInitials(name) : '?');
  
  // If no animal/color selected, show initials
  if (!animal || !color) {
    return (
      <View style={[styles.container, { width: size, height: size }]}>
        <View style={[styles.initialsContainer, { width: size, height: size }]}>
          <Text style={[styles.initials, { fontSize: size * 0.4 }]}>
            {displayInitials}
          </Text>
        </View>
      </View>
    );
  }

  const colors = AVATAR_COLORS[color];
  const animalData = ANIMAL_DATA[animal];

  return (
    <View style={[styles.container, { width: size, height: size }]}>
      <Svg width={size} height={size} viewBox="0 0 24 24">
        {/* Background circle */}
        <Circle
          cx="12"
          cy="12"
          r="12"
          fill={colors.background}
        />
        
        {/* Animal silhouette - render all paths with exact positioning */}
        {animalData.paths.map((path, index) => (
          <Path
            key={index}
            d={path}
            fill={colors.animal}
            transform={`translate(${animalData.x}, ${animalData.y})`}
          />
        ))}
      </Svg>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    borderRadius: 50,
    overflow: 'hidden',
  },
  initialsContainer: {
    backgroundColor: '#E5E7EB',
    justifyContent: 'center',
    alignItems: 'center',
    borderRadius: 50,
  },
  initials: {
    fontWeight: '600',
    color: '#374151',
    textAlign: 'center',
  },
});

export default AnimalAvatar;
